{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Servicio {{ cit_servicio.clave }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Servicio ' + cit_servicio.clave) %}
        {{ topbar.button_previous('Servicios', url_for('cit_servicios.list_active')) }}
        {% if current_user.can_edit('CIT SERVICIOS') %}
            {{ topbar.button_edit('Editar', url_for('cit_servicios.edit', cit_servicio_id=cit_servicio.id)) }}
        {% endif %}
        {% if current_user.can_admin('CIT SERVICIOS') %}
            {% if cit_servicio.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('cit_servicios.delete', cit_servicio_id=cit_servicio.id)) }}{% endif %}
            {% if cit_servicio.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('cit_servicios.recover', cit_servicio_id=cit_servicio.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=cit_servicio.estatus) %}
        {% if current_user.can_view('CIT CATEGORIAS') %}
            {{ detail.label_value('Categoria', cit_servicio.cit_categoria.nombre, url_for('cit_categorias.detail', cit_categoria_id=cit_servicio.cit_categoria_id)) }}
        {% else %}
            {{ detail.label_value('Categoria', cit_servicio.cit_categoria.nombre) }}
        {% endif %}
        {{ detail.label_value('Descripcion', cit_servicio.descripcion) }}
        {{ detail.label_value('Duración', cit_servicio.duracion.strftime("%H:%M")) }}
        {{ detail.label_value('Documentos Limite', cit_servicio.documentos_limite) }}
        {% if cit_servicio.desde and cit_servicio.hasta %}
            {{ detail.label_value('Horario', cit_servicio.desde.strftime("%H:%M") + ' - ' + cit_servicio.hasta.strftime("%H:%M")) }}
        {% elif cit_servicio.desde %}
            {{ detail.label_value('Horario', 'Desde ' + cit_servicio.desde.strftime("%H:%M")) }}
        {% elif cit_servicio.hasta %}
            {{ detail.label_value('Horario', 'Hasta ' + cit_servicio.hasta.strftime("%H:%M")) }}
        {% else %}
            {{ detail.label_value('Horario', 'Sin horario') }}
        {% endif %}
        {{ detail.label_value('Días Hábiles', dias_habilitados ) }}
    {% endcall %}
    {% if current_user.can_view('CIT CITAS') %}
        {% call detail.card('Citas') %}
            <!-- Filtros CitCitas -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosCitCitas.buscar(); return false;">
                        <div class="col-2">
                            <div class="form-floating">
                                <input id="filtroId" type="text" class="form-control" aria-label="ID">
                                <label for="filtroId">ID</label>
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="form-floating">
                                <input id="filtroCitClienteEmail" type="text" class="form-control" aria-label="Correo Electrónico">
                                <label for="filtroCitClienteEmail">Correo Electrónico</label>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                <input id="filtroCitClienteNombres" type="text" class="form-control" aria-label="Nombres" style="text-transform: uppercase;">
                                <label for="filtroCitClienteNombres">Nombres</label>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                <input id="filtroCitClientePrimerApellido" type="text" class="form-control" aria-label="Primer Apellido" style="text-transform: uppercase;">
                                <label for="filtroCitClientePrimerApellido">Primer Apellido</label>
                            </div>
                        </div>
                        <div class="col-2 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosCitCitas.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosCitCitas.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable CitCitas -->
            <table id="cit_citas_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Fecha</th>
                        <th>Inicio</th>
                        <th>Termino</th>
                        <th>Cliente</th>
                        <th>Oficina</th>
                        <th>Estado</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
    {% if current_user.can_view('CIT OFICINAS SERVICIOS') %}
        {% call detail.card('Oficinas-Servicios') %}
            <!-- Filtros CitOficinasServicios -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosCitOficinasServicios.buscar(); return false;">
                        <div class="col-2">
                            <div class="form-floating">
                                <input id="filtroOficinaClave" type="text" class="form-control" aria-label="Oficina Clave" style="text-transform: uppercase;">
                                <label for="filtroOficinaClave">Oficina Clave</label>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-floating">
                                <input id="filtroOficinaDescripcionCorta" type="text" class="form-control" aria-label="Oficina Descripción Corta" style="text-transform: uppercase;">
                                <label for="filtroOficinaDescripcionCorta">Oficina Descripción</label>
                            </div>
                        </div>
                        <div class="col-6 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosCitOficinasServicios.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosCitOficinasServicios.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable CitOficinasServicios -->
            <table id="cit_oficinas_servicios_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Oficina</th>
                        <th>Descripción corta</th>
                        <th>Es J.</th>
                        <th>P.A.C.</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('CIT SERVICIOS') %}
        {% if cit_servicio.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + cit_servicio.clave + '?') }}{% endif %}
        {% if cit_servicio.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + cit_servicio.clave + '?') }}{% endif %}
    {% endif %}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
    </script>
    {% if current_user.can_view('CIT CITAS') %}
        <script>
            // DataTable CitCitas
            let configDTCitCitas = constructorDataTable.config();
            configDTCitCitas['ajax']['url'] = '/cit_citas/datatable_json';
            configDTCitCitas['ajax']['data'] = { 'estatus': "A", 'cit_servicio_id': {{ cit_servicio.id }} };
            configDTCitCitas['columns'] = [
                { data: "detalle" },
                { data: "fecha" },
                { data: "inicio" },
                { data: "termino" },
                { data: "cit_cliente" },
                { data: "oficina" },
                { data: "estado" }
            ];
            configDTCitCitas['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // fecha
                    type: 'date',
                    render: function (data, type, row) {
                        return moment(data).format('YYYY-MM-DD, ddd');
                    }
                },
                {
                    targets: 4, // cit_cliente
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url !== '') {
                            return '<a href="' + data.url + '">' + data.nombre + '</a>';
                        }
                        return data.nombre
                    }
                },
                {
                    targets: 5, // oficina
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url !== '') {
                            return '<span title="' + data.descripcion + '">' + '<a href="' + data.url + '">' + data.clave + '</a></span>';
                        }
                        return '<span title="' + data.descripcion + '">' + data.clave + '</span>'
                    }
                },
                {
                    targets: 6, // Estado
                    data: null,
                    render: function(data, type, row, meta) {
                        switch (data)    {
                            case "ASISTIO":     return '<span class="badge rounded-pill bg-success px-3 ms-3">Asistió</span>'; break;
                            case "PENDIENTE":   return '<span class="badge rounded-pill bg-warning px-3 ms-3 text-dark">Pendiente</span>'; break;
                            case "CANCELO":     return '<span class="badge rounded-pill bg-danger px-3 ms-4">Cancelo</span>'; break;
                            case "INASISTENCIA":return '<span class="badge rounded-pill bg-secondary px-3 ms-4">NO Asistió</span>'; break;
                        }
                        return data;
                    }
                }
            ];
            // DataTable estilos en las filas segun estado
            configDTCitCitas['createdRow'] = function(row, data, dataIndex) {
                switch (data.estado) {
                    case "ASISTIO":      $(row).addClass('table-success'); break;
                    case "PENDIENTE":    $(row).addClass('table-warning'); break;
                    case "CANCELO":      $(row).addClass('table-danger'); break;
                    case "INASISTENCIA": $(row).addClass('table-secondary'); break;
                }
            };
            // Filtros CitCitas
            const filtrosCitCitas = new FiltrosDataTable('#cit_citas_datatable', configDTCitCitas);
            filtrosCitCitas.agregarInput('filtroId', 'id');
            filtrosCitCitas.agregarInput('filtroCitClienteEmail', 'cit_cliente_email');
            filtrosCitCitas.agregarInput('filtroCitClienteNombres', 'cit_cliente_nombres');
            filtrosCitCitas.agregarInput('filtroCitClientePrimerApellido', 'cit_cliente_primer_apellido');
            filtrosCitCitas.precargar();
        </script>
    {% endif %}
    {% if current_user.can_view('CIT OFICINAS SERVICIOS') %}
        <script>
            // DataTable CitOficinasServicios
            let configDTCitOficinasServicios = constructorDataTable.config();
            configDTCitOficinasServicios['ajax']['url'] = '/cit_oficinas_servicios/datatable_json';
            configDTCitOficinasServicios['ajax']['data'] = { 'estatus': "A", 'cit_servicio_id': {{ cit_servicio.id }} };
            configDTCitOficinasServicios['columns'] = [
                { data: 'detalle' },
                { data: 'oficina' },
                { data: 'oficina_descripcion_corta' },
                { data: 'oficina_es_jurisdiccional' },
                { data: 'oficina_puede_agendar_citas' }
            ];
            configDTCitOficinasServicios['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // oficina
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url === '') {
                            return data.clave;
                        }
                        return '<a href="' + data.url + '">' + data.clave + '</a>'
                    }
                },
                {
                    targets: 2, // oficina_descripcion_corta
                    data: null,
                    render: function(data, type, row, meta) {
                        return (data.length > 32 ? data.substring(0, 32) + '…' : data);
                    }
                },
                {
                    targets: [3, 4], // oficina_es_jurisdiccional, oficina_puede_agendar_citas
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data) {
                            return 'SI';
                        }
                        return '';
                    }
                }
            ];
            // Filtros CitOficinasServicios
            const filtrosCitOficinasServicios = new FiltrosDataTable('#cit_oficinas_servicios_datatable', configDTCitOficinasServicios);
            filtrosCitOficinasServicios.agregarInput('filtroOficinaClave', 'oficina_clave');
            filtrosCitOficinasServicios.agregarInput('filtroOficinaDescripcionCorta', 'oficina_descripcion_corta');
            filtrosCitOficinasServicios.precargar();
        </script>
    {% endif %}
{% endblock %}
