{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}{{ titulo }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {% if current_user.can_admin('CIT CLIENTES RECUPERACIONES') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('cit_clientes_recuperaciones.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('cit_clientes_recuperaciones.list_active')) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <!-- Filtros Cit Clientes Recuperaciones -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosCitClientesRecuperaciones.buscar(); return false;">
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroCitClienteEmail" type="text" class="form-control" aria-label="Correo Electrónico">
                            <label for="filtroCitClienteEmail">Correo Electrónico</label>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-floating">
                            <input id="filtroCitClienteNombres" type="text" class="form-control" aria-label="Nombres" style="text-transform: uppercase;">
                            <label for="filtroCitClienteNombres">Nombres</label>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-floating">
                            <input id="filtroCitClientePrimerApellido" type="text" class="form-control" aria-label="Primer Apellido" style="text-transform: uppercase;">
                            <label for="filtroCitClientePrimerApellido">Primer Apellido</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosCitClientesRecuperaciones.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosCitClientesRecuperaciones.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- DataTable Cit Clientes Recuperaciones -->
        <table id="cit_clientes_recuperaciones_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Cliente</th>
                    <th>Expiración</th>
                    <th>Ya recuperado</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // DataTable Cit Clientes Recuperaciones
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
        let configDataTable = constructorDataTable.config();
        configDataTable['ajax']['url'] = '/cit_clientes_recuperaciones/datatable_json';
        configDataTable['ajax']['data'] = {{ filtros }};
        configDataTable['columns'] = [
            { data: 'detalle' },
            { data: 'cit_cliente' },
            { data: 'expiracion' },
            { data: 'ya_recuperado' }
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '">' + data.id + '</a>';
                }
            },
            {
                targets: 1, // cit_cliente
                data: null,
                render: function(data, type, row, meta) {
                    if (data.url != '') {
                        return '<a href="' + data.url + '">' + data.nombre + '</a>';
                    }
                    return data.nombre
                }
            },
            {
                targets: 2, // expiracion
                type: 'date',
                render: function (data, type, row) {
                    return moment.utc(data).local().format('YYYY-MM-DD HH:mm');
                }
            },
            {
                targets: 3, // ya_recuperado
                data: null,
                render: function(data, type, row, meta) {
                    if (data) {
                        return '<span class="badge rounded-pill bg-success px-3 ms-3">Sí</span>';
                    }
                    return '<span class="badge rounded-pill bg-danger px-3 ms-3">No</span>';
                }
            }
        ];
        // DataTable estilos en las filas segun ya_recuperado
        configDataTable['createdRow'] = function(row, data, dataIndex) {
            if (data.ya_recuperado) {
                $(row).addClass('table-success');
            } else {
                $(row).addClass('table-warning');
            }
        };
        // Filtros Cit Clientes Recuperaciones
        const filtrosCitClientesRecuperaciones = new FiltrosDataTable('#cit_clientes_recuperaciones_datatable', configDataTable);
        filtrosCitClientesRecuperaciones.agregarInput('filtroCitClienteEmail', 'cit_cliente_email');
        filtrosCitClientesRecuperaciones.agregarInput('filtroCitClienteNombres', 'cit_cliente_nombres');
        filtrosCitClientesRecuperaciones.agregarInput('filtroCitClientePrimerApellido', 'cit_cliente_primer_apellido');
        filtrosCitClientesRecuperaciones.precargar();
    </script>
{% endblock %}
