{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Oficina {{ oficina.clave }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Oficina ' + oficina.clave) %}
        {{ topbar.button_previous('Oficinas', url_for('oficinas.list_active')) }}
        {% if current_user.can_edit('OFICINAS') %}
            {{ topbar.button_edit('Editar', url_for('oficinas.edit', oficina_id=oficina.id)) }}
        {% endif %}
        {% if current_user.can_admin('OFICINAS') %}
            {% if oficina.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('oficinas.delete', oficina_id=oficina.id)) }}{% endif %}
            {% if oficina.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('oficinas.recover', oficina_id=oficina.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=oficina.estatus) %}
        <div class="row">
            <div class="col-md-6">
                {{ detail.label_value_big('Clave', oficina.clave) }}
                {{ detail.label_value('Descripción', oficina.descripcion) }}
                {{ detail.label_value('Desc. Corta', oficina.descripcion_corta) }}
                {% if current_user.can_view('DISTRITOS') %}
                    {{ detail.label_value('Distrito', oficina.distrito.nombre, url_for('distritos.detail', distrito_id=oficina.distrito_id)) }}
                {% else %}
                    {{ detail.label_value('Distrito', oficina.distrito.nombre) }}
                {% endif %}
                {% if current_user.can_view('DOMICILIOS') %}
                    {{ detail.label_value('Edificio', oficina.domicilio.edificio, url_for('domicilios.detail', domicilio_id=oficina.domicilio_id)) }}
                {% else %}
                    {{ detail.label_value('Edificio', oficina.domicilio.edificio) }}
                {% endif %}
            </div>
            <div class="col-md-6">
                {{ detail.label_value('Horario', oficina.apertura.strftime("%H:%M") + ' — ' + oficina.cierre.strftime("%H:%M")) }}
                {{ detail.label_value('Límite de Personas', oficina.limite_personas) }}
                {{ detail.label_value_boolean('Es Juridiccional', oficina.es_jurisdiccional) }}
                {{ detail.label_value_boolean('Puede agendar citas', oficina.puede_agendar_citas) }}
                {{ detail.label_value_boolean('Puede enviar códigos QR', oficina.puede_enviar_qr) }}
            </div>
        </div>
    {% endcall %}
    {% if current_user.can_view('CIT CITAS') and oficina.estatus == 'A' %}
        {% call detail.card('Citas') %}
            <!-- Filtros CitCitas -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosCitCitas.buscar(); return false;">
                        <div class="col-2">
                            <div class="form-floating">
                                <input id="filtroId" type="text" class="form-control" aria-label="ID">
                                <label for="filtroId">ID</label>
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="form-floating">
                                <input id="filtroCitClienteEmail" type="text" class="form-control" aria-label="Correo Electrónico">
                                <label for="filtroCitClienteEmail">Correo Electrónico</label>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                <input id="filtroCitClienteNombres" type="text" class="form-control" aria-label="Nombres" style="text-transform: uppercase;">
                                <label for="filtroCitClienteNombres">Nombres</label>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                <input id="filtroCitClientePrimerApellido" type="text" class="form-control" aria-label="Primer Apellido" style="text-transform: uppercase;">
                                <label for="filtroCitClientePrimerApellido">Primer Apellido</label>
                            </div>
                        </div>
                        <div class="col-2 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosCitCitas.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosCitCitas.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable CitCitas -->
            <table id="cit_citas_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Fecha</th>
                        <th>Inicio</th>
                        <th>Termino</th>
                        <th>Cliente</th>
                        <th>Servicio</th>
                        <th>Estado</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
    {% if current_user.can_view('CIT HORAS BLOQUEADAS') and oficina.estatus == 'A' %}
        {% call detail.card('Horas Bloqueadas') %}
            <!-- Filtros CitHorasBloqueadas -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosCitHorasBloqueadas.buscar(); return false;">
                        <div class="col-6">
                            <div class="form-floating">
                                <input id="filtroDescripcion" type="text" class="form-control" aria-label="Descripción" style="text-transform: uppercase;">
                                <label for="filtroDescripcion">Descripción</label>
                            </div>
                        </div>
                        <div class="col-6 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosCitHorasBloqueadas.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosCitHorasBloqueadas.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable CitHorasBloqueadas -->
            <table id="cit_horas_bloqueadas_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Fecha</th>
                        <th>Inicio</th>
                        <th>Termino</th>
                        <th>Descripción</th>
                    </tr>
                </thead>
            </table>
            {% if current_user.can_insert('CIT HORAS BLOQUEADAS') %}
            <a href="{{ url_for('cit_horas_bloqueadas.new') + '?oficina_id=' + oficina.id | string }}" class="btn btn-primary">Agregar Hora Bloqueada</a>
            {% endif %}
        {% endcall %}
    {% endif %}
    {% if current_user.can_view('CIT OFICINAS SERVICIOS') and oficina.estatus == 'A' %}
        {% call detail.card('Servicios') %}
            <!-- Filtros CitOficinasServicios -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosCitOficinasServicios.buscar(); return false;">
                        <div class="col-2">
                            <div class="form-floating">
                                <input id="filtroCitServicioClave" type="text" class="form-control" aria-label="Servicio Clave" style="text-transform: uppercase;">
                                <label for="filtroCitServicioClave">Servicio Clave</label>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-floating">
                                <input id="filtroCitServicioDescripcion" type="text" class="form-control" aria-label="Servicio Descripción" style="text-transform: uppercase;">
                                <label for="filtroCitServicioDescripcion">Servicio Descripción</label>
                            </div>
                        </div>
                        <div class="col-6 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosCitOficinasServicios.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosCitOficinasServicios.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable CitOficinasServicios -->
            <table id="cit_oficinas_servicios_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Servicio</th>
                        <th>Descripción</th>
                    </tr>
                </thead>
            </table>
            {% if current_user.can_insert('CIT OFICINAS SERVICIOS') %}
            <a href="{{ url_for('cit_oficinas_servicios.new_with_oficina', oficina_id=oficina.id) }}" class="btn btn-primary">Agregar Servicio</a>
            {% endif %}
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('OFICINAS') %}
        {% if oficina.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + oficina.clave + '?') }}{% endif %}
        {% if oficina.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + oficina.clave + '?') }}{% endif %}
    {% endif %}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
    </script>
    {% if current_user.can_view('CIT CITAS') and oficina.estatus == 'A' %}
        <script>
            // DataTable CitCitas
            let configDTCitCitas = constructorDataTable.config();
            configDTCitCitas['ajax']['url'] = '/cit_citas/datatable_json';
            configDTCitCitas['ajax']['data'] = { 'estatus': "A", 'oficina_id': {{ oficina.id }} };
            configDTCitCitas['columns'] = [
                { data: "detalle" },
                { data: "fecha" },
                { data: "inicio" },
                { data: "termino" },
                { data: "cit_cliente" },
                { data: "cit_servicio" },
                { data: "estado" }
            ];
            configDTCitCitas['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // fecha
                    type: 'date',
                    render: function (data, type, row) {
                        return moment(data).format('YYYY-MM-DD, ddd');
                    }
                },
                {
                    targets: 4, // cit_cliente
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url !== '') {
                            return '<a href="' + data.url + '">' + data.nombre + '</a>';
                        }
                        return data.nombre
                    }
                },
                {
                    targets: 5, // cit_servicio
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url !== '') {
                            return '<span title="' + data.descripcion + '">' + '<a href="' + data.url + '">' + data.clave + '</a></span>';
                        }
                        return '<span title="' + data.descripcion + '">' + data.clave + '</span>'
                    }
                },
                {
                    targets: 6, // Estado
                    data: null,
                    render: function(data, type, row, meta) {
                        switch (data)    {
                            case "ASISTIO":     return '<span class="badge rounded-pill bg-success px-3 ms-3">Asistió</span>'; break;
                            case "PENDIENTE":   return '<span class="badge rounded-pill bg-warning px-3 ms-3 text-dark">Pendiente</span>'; break;
                            case "CANCELO":     return '<span class="badge rounded-pill bg-danger px-3 ms-4">Cancelo</span>'; break;
                            case "INASISTENCIA":return '<span class="badge rounded-pill bg-secondary px-3 ms-4">NO Asistió</span>'; break;
                        }
                        return data;
                    }
                }
            ];
            // DataTable estilos en las filas segun estado
            configDTCitCitas['createdRow'] = function(row, data, dataIndex) {
                switch (data.estado) {
                    case "ASISTIO":      $(row).addClass('table-success'); break;
                    case "PENDIENTE":    $(row).addClass('table-warning'); break;
                    case "CANCELO":      $(row).addClass('table-danger'); break;
                    case "INASISTENCIA": $(row).addClass('table-secondary'); break;
                }
            };
            // Filtros CitCitas
            const filtrosCitCitas = new FiltrosDataTable('#cit_citas_datatable', configDTCitCitas);
            filtrosCitCitas.agregarInput('filtroId', 'id');
            filtrosCitCitas.agregarInput('filtroCitClienteEmail', 'cit_cliente_email');
            filtrosCitCitas.agregarInput('filtroCitClienteNombres', 'cit_cliente_nombres');
            filtrosCitCitas.agregarInput('filtroCitClientePrimerApellido', 'cit_cliente_primer_apellido');
            filtrosCitCitas.precargar();
        </script>
    {% endif %}
    {% if current_user.can_view('CIT HORAS BLOQUEADAS') and oficina.estatus == 'A' %}
        <script>
            // DataTable CitHorasBloqueadas
            let configDTCitHorasBloqueadas = constructorDataTable.config();
            configDTCitHorasBloqueadas['ajax']['url'] = '/cit_horas_bloqueadas/datatable_json';
            configDTCitHorasBloqueadas['ajax']['data'] = { 'estatus': "A", 'oficina_id': {{ oficina.id }} };
            configDTCitHorasBloqueadas['columns'] = [
                { data: 'detalle' },
                { data: 'inicio' },
                { data: 'termino' },
                { data: 'descripcion' }
            ];
            configDTCitHorasBloqueadas['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + moment(data.fecha).format('YYYY-MM-DD, ddd') + '</a>';
                    }
                },
                {
                    targets: 3, // descripción
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.length > 32) {
                            return '<span title="' + data + '">' + data.substring(0, 32) + '…' + '</span>';
                        }
                        return data;
                    }
                }
            ];
            // Filtros CitHorasBloqueadas
            const filtrosCitHorasBloqueadas = new FiltrosDataTable('#cit_horas_bloqueadas_datatable', configDTCitHorasBloqueadas);
            filtrosCitHorasBloqueadas.agregarInput('filtroDescripcion', 'descripcion');
            filtrosCitHorasBloqueadas.precargar();
        </script>
    {% endif %}
    {% if current_user.can_view('CIT OFICINAS SERVICIOS') and oficina.estatus == 'A' %}
        <script>
            // DataTable CitOficinasServicios
            let configDTCitOficinasServicios = constructorDataTable.config();
            configDTCitOficinasServicios['ajax']['url'] = '/cit_oficinas_servicios/datatable_json';
            configDTCitOficinasServicios['ajax']['data'] = { 'estatus': "A", 'oficina_id': {{ oficina.id }} };
            configDTCitOficinasServicios['columns'] = [
                { data: 'detalle' },
                { data: 'cit_servicio' },
                { data: 'cit_servicio_descripcion' }
            ];
            configDTCitOficinasServicios['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // cit_servicio
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url === '') {
                            return data.clave;
                        }
                        return '<a href="' + data.url + '">' + data.clave + '</a>'
                    }
                },
                {
                    targets: 2, // cit_servicio_descripcion
                    data: null,
                    render: function(data, type, row, meta) {
                        return (data.length > 32 ? data.substring(0, 32) + '…' : data);
                    }
                }
            ];
            // Filtros CitOficinasServicios
            const filtrosCitOficinasServicios = new FiltrosDataTable('#cit_oficinas_servicios_datatable', configDTCitOficinasServicios);
            filtrosCitOficinasServicios.agregarInput('filtroCitServicioClave', 'cit_servicio_clave');
            filtrosCitOficinasServicios.agregarInput('filtroCitServicioDescripcion', 'cit_servicio_descripcion');
            filtrosCitOficinasServicios.precargar();
        </script>
    {% endif %}
{% endblock %}
